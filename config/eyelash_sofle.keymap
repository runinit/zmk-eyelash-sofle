#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/rgb_colors.h>

/* Layer definitions for underglow */
#define LAYER_Base 0
#define LAYER_Upper 1
#define LAYER_Lower 2
#define LAYER_Adjust 3

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    underglow-layer {
        compatible = "zmk,underglow-layer";

        base {
            bindings = <
&ug ___ &ug ___ &ug ___ &ug ___ &ug ___ &ug ___    &ug ___ &ug ___ &ug ___ &ug ___ &ug ___ &ug ___ &ug ___
&ug ___ &ug_cl ___ TEAL &ug_cl ___ TEAL &ug_cl ___ TEAL &ug_cl ___ TEAL &ug_cl ___ TEAL    &ug ___ &ug_cl ___ TEAL &ug_cl ___ TEAL &ug_cl ___ TEAL &ug_cl ___ TEAL &ug_cl ___ TEAL &ug ___
&ug ___ &ug_cl ___ TEAL &ug_cl ___ TEAL &ug_cl ___ TEAL &ug_cl ___ TEAL &ug_cl ___ TEAL    &ug ___ &ug_cl ___ TEAL &ug_cl ___ TEAL &ug_cl ___ TEAL &ug_cl ___ TEAL &ug_cl ___ TEAL &ug ___
&ug ___ &ug_cl ___ TEAL &ug_cl ___ TEAL &ug_cl ___ TEAL &ug_cl ___ TEAL &ug_cl ___ TEAL    &ug ___ &ug_cl ___ TEAL &ug_cl ___ TEAL &ug_cl ___ TEAL &ug_cl ___ TEAL &ug_cl ___ TEAL &ug ___
&ug ___ &ug ___ &ug ___ &ug ___ &ug ___ &ug ___    &ug ___ &ug ___ &ug ___ &ug ___ &ug ___ &ug ___
            >;
            layer-id = <LAYER_Base>;
        };

        upper {
            bindings = <
&ug ___ &ug BLUE &ug BLUE &ug BLUE &ug BLUE &ug BLUE    &ug ___ &ug BLUE &ug BLUE &ug BLUE &ug BLUE &ug BLUE &ug ___
&ug ___ &ug BLUE &ug ORANGE &ug ORANGE &ug ORANGE &ug ORANGE    &ug ___ &ug GREEN &ug GREEN &ug BLUE &ug GREEN &ug BLUE &ug ___
&ug ___ &ug BLUE &ug ___ &ug ___ &ug ___ &ug ORANGE    &ug ___ &ug GREEN &ug BLUE &ug BLUE &ug BLUE &ug BLUE &ug ___
&ug ___ &ug RED &ug RED &ug RED &ug RED &ug RED    &ug ___ &ug RED &ug RED &ug BLUE &ug BLUE &ug BLUE &ug ___
&ug ___ &ug ___ &ug ___ &ug ___ &ug ___ &ug ___    &ug ___ &ug ___ &ug ___ &ug ___ &ug ___ &ug ___
            >;
            layer-id = <LAYER_Upper>;
        };

        lower {
            bindings = <
&ug ___ &ug PURPLE &ug PURPLE &ug PURPLE &ug PURPLE &ug PURPLE    &ug ___ &ug BLUE &ug BLUE &ug BLUE &ug BLUE &ug BLUE &ug ___
&ug ___ &ug YELLOW &ug YELLOW &ug YELLOW &ug YELLOW &ug YELLOW    &ug ___ &ug ___ &ug ___ &ug BLUE &ug BLUE &ug BLUE &ug ___
&ug ___ &ug YELLOW &ug YELLOW &ug YELLOW &ug YELLOW &ug YELLOW    &ug ___ &ug ___ &ug ___ &ug ___ &ug ___ &ug BLUE &ug ___
&ug ___ &ug ORANGE &ug ___ &ug RED &ug ___ &ug ___    &ug ___ &ug ___ &ug ___ &ug ORANGE &ug RED &ug RED &ug ___
&ug ___ &ug ___ &ug ___ &ug ___ &ug ___ &ug ___    &ug ___ &ug ___ &ug ___ &ug ___ &ug ___ &ug ___
            >;
            layer-id = <LAYER_Lower>;
        };

        adjust {
            bindings = <
&ug ___ &ug ___ &ug ___ &ug ___ &ug ___ &ug ___    &ug ___ &ug ___ &ug ___ &ug ___ &ug ___ &ug ___ &ug ___
&ug ___ &ug ___ &ug ___ &ug ___ &ug ___ &ug ___    &ug ___ &ug ___ &ug ___ &ug ___ &ug ___ &ug ___ &ug ___
&ug ___ &ug ___ &ug ___ &ug ___ &ug ___ &ug ___    &ug ___ &ug ___ &ug ___ &ug ___ &ug ___ &ug ___ &ug ___
&ug ___ &ug ___ &ug ___ &ug ___ &ug ___ &ug ___    &ug ___ &ug ___ &ug ___ &ug ___ &ug ___ &ug ___ &ug ___
&ug ___ &ug ___ &ug ___ &ug ___ &ug ___ &ug ___    &ug ___ &ug ___ &ug ___ &ug ___ &ug ___ &ug ___
            >;
            layer-id = <LAYER_Adjust>;
        };
    };
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        layer_base {
            bindings = <
&kp ESC     &kp N1        &kp N2        &kp N3     &kp N4  &kp N5        &kp UP_ARROW     &kp N6     &kp N7  &kp N8             &kp N9         &kp N0        &kp BACKSPACE
&kp TAB     &kp Q         &kp W         &kp E      &kp R   &kp T         &kp DOWN_ARROW   &kp Y      &kp U   &kp I              &kp O          &kp P         &kp BSLH
&kp CAPS    &kp A         &kp S         &kp D      &kp F   &kp G         &kp LEFT_ARROW   &kp H      &kp J   &kp K              &kp L          &kp SEMI      &kp APOS
&kp LSHFT   &kp Z         &kp X         &kp C      &kp V   &kp B         &kp RIGHT_ARROW  &kp N      &kp M   &kp COMMA          &kp DOT        &kp FSLH      &kp RIGHT_SHIFT
&kp C_MUTE  &kp LEFT_GUI  &kp LEFT_ALT  &kp LCTRL  &mo 1   &kp RETURN    &kp ENTER        &kp SPACE  &mo 2   &kp RIGHT_CONTROL  &kp RIGHT_ALT  &kp LEFT_GUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "Base";
            label = "Base";
        };

        layer_upper {
            bindings = <
&kp GRAVE   &kp F1           &kp F2          &kp F3           &kp F4           &kp F5             &mmv MOVE_UP     &kp F6           &kp F7           &kp F8      &kp F9     &kp F10           &kp DEL
&trans      &kp GRAVE        &mkp LCLK       &mkp MCLK        &mkp RCLK        &mkp MB4           &mmv MOVE_DOWN   &kp PG_UP        &kp END          &kp UP      &kp HOME   &kp MINUS         &kp EQUAL
&trans      &kp TILDE        &trans          &trans           &trans           &mkp MB5           &mmv MOVE_LEFT   &kp PG_DN        &kp LEFT         &kp DOWN    &kp RIGHT  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans      &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_SPI    &mmv MOVE_RIGHT  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp INSERT  &kp F11    &kp F12           &trans
&kp C_MUTE  &trans           &trans          &trans           &trans           &trans             &mkp LCLK        &trans           &trans           &trans      &trans     &trans
            >;

            display-name = "Upper";
            sensor-bindings = <&scroll_encoder>;
            label = "Upper";
        };

        layer_lower {
            bindings = <
&kp TILDE  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP     &kp F6  &kp F7  &kp F8      &kp F9     &kp F10      &trans
&trans     &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans          &mmv MOVE_DOWN   &trans  &trans  &kp F11     &kp F12    &kp UNDER    &kp PLUS
&trans     &out OUT_USB  &out OUT_BLE    &trans        &trans        &trans          &mmv MOVE_LEFT   &trans  &trans  &trans      &trans     &kp LBRC     &kp RBRC
&trans     &sys_reset    &trans          &bootloader   &trans        &trans          &mmv MOVE_RIGHT  &trans  &trans  &sys_reset  &soft_off  &bootloader  &trans
&trans     &trans        &trans          &trans        &trans        &trans          &mkp LCLK        &trans  &trans  &trans      &trans     &trans
            >;
            display-name = "Lower";
            sensor-bindings = <&scroll_encoder>;
            label = "Lower";
        };

        layer_adjust {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;

            label = "Adjust";
        };
    };
};
