#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/rgb_dual_breath.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };
&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    rgb_dual_breath: rgb_dual_breath {
        compatible = "zmk,behavior-rgb-dual-breath";
        label = "RGB_DUAL_BREATH";
        #binding-cells = <1>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
        tap-ms = <100>;
    };

    behaviors {
        lower_td: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "LOWER_TAP_DANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo 1>, <&to 1>;
        };

        upper_td: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "UPPER_TAP_DANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo 2>, <&to 2>;
        };

        rgb_up: rgb_up_mod_morph {
            compatible = "zmk,behavior-mod-morph";
            label = "RGB_UP_MOD_MORPH";
            #binding-cells = <0>;
            bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_SAI>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        rgb_down: rgb_down_mod_morph {
            compatible = "zmk,behavior-mod-morph";
            label = "RGB_DOWN_MOD_MORPH";
            #binding-cells = <0>;
            bindings = <&rgb_ug RGB_BRD>, <&rgb_ug RGB_SAD>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        rgb_left: rgb_left_mod_morph {
            compatible = "zmk,behavior-mod-morph";
            label = "RGB_LEFT_MOD_MORPH";
            #binding-cells = <0>;
            bindings = <&rgb_ug RGB_EFR>, <&rgb_ug RGB_HUD>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        rgb_right: rgb_right_mod_morph {
            compatible = "zmk,behavior-mod-morph";
            label = "RGB_RIGHT_MOD_MORPH";
            #binding-cells = <0>;
            bindings = <&rgb_ug RGB_EFF>, <&rgb_ug RGB_HUI>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        bt_0_mm: bt_0_mod_morph {
            compatible = "zmk,behavior-mod-morph";
            label = "BT_0_MOD_MORPH";
            #binding-cells = <0>;
            bindings = <&bt_0>, <&bt_clear_0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        bt_1_mm: bt_1_mod_morph {
            compatible = "zmk,behavior-mod-morph";
            label = "BT_1_MOD_MORPH";
            #binding-cells = <0>;
            bindings = <&bt_1>, <&bt_clear_1>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        bt_2_mm: bt_2_mod_morph {
            compatible = "zmk,behavior-mod-morph";
            label = "BT_2_MOD_MORPH";
            #binding-cells = <0>;
            bindings = <&bt_2>, <&bt_clear_2>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        bt_3_mm: bt_3_mod_morph {
            compatible = "zmk,behavior-mod-morph";
            label = "BT_3_MOD_MORPH";
            #binding-cells = <0>;
            bindings = <&bt_3>, <&bt_clear_3>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        bt_4_mm: bt_4_mod_morph {
            compatible = "zmk,behavior-mod-morph";
            label = "BT_4_MOD_MORPH";
            #binding-cells = <0>;
            bindings = <&bt_4>, <&bt_clear_4>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        bt_5_mm: bt_5_mod_morph {
            compatible = "zmk,behavior-mod-morph";
            label = "BT_5_MOD_MORPH";
            #binding-cells = <0>;
            bindings = <&bt_5>, <&bt_clear_5>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    macros {
        bt_0: bt_profile_macro_0 {
            label = "BT_0";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE>, <&bt BT_SEL 0>;
        };

        bt_1: bt_profile_macro_1 {
            label = "BT_1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE>, <&bt BT_SEL 1>;
        };

        bt_2: bt_profile_macro_2 {
            label = "BT_2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE>, <&bt BT_SEL 2>;
        };

        bt_3: bt_profile_macro_3 {
            label = "BT_3";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE>, <&bt BT_SEL 3>;
        };

        bt_4: bt_profile_macro_4 {
            label = "BT_4";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE>, <&bt BT_SEL 4>;
        };

        bt_5: bt_profile_macro_5 {
            label = "BT_5";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE>, <&bt BT_SEL 5>;
        };

        bt_clear_0: bt_clear_macro_0 {
            label = "BT_CLEAR_0";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_DISC 0>;
        };

        bt_clear_1: bt_clear_macro_1 {
            label = "BT_CLEAR_1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_DISC 1>;
        };

        bt_clear_2: bt_clear_macro_2 {
            label = "BT_CLEAR_2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_DISC 2>;
        };

        bt_clear_3: bt_clear_macro_3 {
            label = "BT_CLEAR_3";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_DISC 3>;
        };

        bt_clear_4: bt_clear_macro_4 {
            label = "BT_CLEAR_4";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_DISC 4>;
        };

        bt_clear_5: bt_clear_macro_5 {
            label = "BT_CLEAR_5";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_DISC 5>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
&kp ESC     &kp N1        &kp N2        &kp N3     &kp N4    &kp N5        &kp UP_ARROW     &kp N6     &kp N7    &kp N8             &kp N9         &kp N0        &kp BACKSPACE
&kp TAB     &kp Q         &kp W         &kp E      &kp R     &kp T         &kp DOWN_ARROW   &kp Y      &kp U     &kp I              &kp O          &kp P         &kp BSLH
&kp CAPS    &kp A         &kp S         &kp D      &kp F     &kp G         &kp LEFT_ARROW   &kp H      &kp J     &kp K              &kp L          &kp SEMI      &kp APOS
&kp LSHFT   &kp Z         &kp X         &kp C      &kp V     &kp B         &kp RIGHT_ARROW  &kp N      &kp M     &kp COMMA          &kp DOT        &kp FSLH      &kp RIGHT_SHIFT
&kp C_MUTE  &kp LEFT_GUI  &kp LEFT_ALT  &kp LCTRL  &lower_td &kp RETURN    &kp ENTER        &kp SPACE  &upper_td &kp RIGHT_CONTROL  &kp RIGHT_ALT  &mo 3
            >;
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "Base";
            label = "Base";
        };

        layer_1 {
            bindings = <
&kp GRAVE   &kp F1           &kp F2          &kp F3           &kp F4           &kp F5             &mmv MOVE_UP     &kp F6           &kp F7           &kp F8      &kp F9     &kp F10           &kp DEL
&trans      &kp GRAVE        &mkp LCLK       &mkp MCLK        &mkp RCLK        &mkp MB4           &mmv MOVE_DOWN   &kp PG_UP        &kp END          &kp UP      &kp HOME   &kp MINUS         &kp EQUAL
&trans      &kp TILDE        &trans          &trans           &trans           &mkp MB5           &mmv MOVE_LEFT   &kp PG_DN        &kp LEFT         &kp DOWN    &kp RIGHT  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans      &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_SPI    &mmv MOVE_RIGHT  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp INSERT  &kp F11    &kp F12           &trans
&kp C_MUTE  &trans           &trans          &trans           &trans           &trans             &mkp LCLK        &trans           &trans           &trans      &trans     &trans
            >;
            display-name = "Lower";
            sensor-bindings = <&scroll_encoder>;
            label = "Lower";
        };

        layer_2 {
            bindings = <
&kp TILDE  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP     &kp F6  &kp F7  &kp F8      &kp F9     &kp F10      &trans
&trans     &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans          &mmv MOVE_DOWN   &trans  &trans  &kp F11     &kp F12    &kp UNDER    &kp PLUS
&trans     &out OUT_USB  &out OUT_BLE    &trans        &trans        &trans          &mmv MOVE_LEFT   &trans  &trans  &trans      &trans     &kp LBRC     &kp RBRC
&trans     &sys_reset    &trans          &bootloader   &trans        &trans          &mmv MOVE_RIGHT  &trans  &trans  &sys_reset  &soft_off  &bootloader  &trans
&trans     &trans        &trans          &trans        &trans        &trans          &mkp LCLK        &trans  &trans  &trans      &trans     &trans
            >;
            display-name = "Upper";
            sensor-bindings = <&scroll_encoder>;
            label = "Upper";
        };

        layer_3 {
            bindings = <
&trans           &bt_0_mm        &bt_1_mm        &bt_2_mm        &bt_3_mm        &bt_4_mm           &rgb_up    &bt_5_mm         &trans &trans &trans &trans &sys_reset
&trans           &bt BT_CLR      &rgb_ug RGB_TOG &rgb_ug RGB_HUI &rgb_ug RGB_SAI &rgb_ug RGB_BRI    &rgb_down  &bt BT_CLR_ALL   &trans &trans &trans &trans &bootloader
&trans           &out OUT_USB    &rgb_ug RGB_EFF &rgb_ug RGB_HUD &rgb_ug RGB_SAD &rgb_ug RGB_BRD    &rgb_left  &rgb_dual_breath RGB_DUAL_BREATH_TOG &trans &trans &trans &trans &trans
&trans           &out OUT_BLE    &rgb_ug RGB_EFR &rgb_ug RGB_SPI &rgb_ug RGB_SPD &trans             &rgb_right &trans           &trans &trans &trans &trans &trans
&rgb_ug RGB_TOG  &trans          &trans          &trans          &trans          &trans             &trans     &trans           &trans &trans &trans &trans
            >;
            display-name = "Adjust";
            sensor-bindings = <&scroll_encoder>;
            label = "Adjust";
        };
    };
};
